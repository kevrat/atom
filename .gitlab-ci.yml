stages:
  - testing
  - build

test unit:
  image: mysql
  services:
    - mysql:latest
  stage: testing
  variables:
    MYSQL_DATABASE: atom
    MYSQL_ROOT_PASSWORD: atom
    MYSQL_USER: atom
    MYSQL_PASSWORD: atom
  script:
    - echo "SELECT 'OK';" | mysql --user=root --password=atom --host=mysql atom
    - mkdir -p .ci_status
    - cd web_hackaton
    - ./gradlew check
    - cd ../
    - echo "test unit"
    - touch .ci_status/test_unit
    - if [ -e ./gradlew ]; then ./gradlew jacocoTestReport;else gradle jacocoTestReport;fi
    - bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN
  artifacts:
    paths:
      - .ci_status/


docker-build:
  image: docker:latest
  stage: build
  variables:
    DOCKER_DRIVER: overlay
    SPRING_PROFILES_ACTIVE: gitlab-ci
  services:
    - docker:dind
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" -f web_hackaton/Dockerfile .
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
#    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker push "$CI_REGISTRY_IMAGE"
    - mkdir -p .ci_status
    - echo "Build"
    - touch .ci_status/build_success    
  artifacts:
    paths:
      - .ci_status/
