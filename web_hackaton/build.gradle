plugins {
    id 'org.springframework.boot' version '2.0.0.RELEASE'
    id 'antlr'
    id 'nu.studer.jooq' version '3.0.3'
    id "org.flywaydb.flyway" version "5.2.4"
//    id "io.spring.dependency-management" version "1.0.7.RELEASE"
}

repositories {
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'idea'
//apply plugin: 'checkstyle'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'
apply plugin: 'nu.studer.jooq'
apply plugin: "org.flywaydb.flyway"
//apply plugin: "io.spring.dependency-management"

ext['jooq.version'] = '3.11.9'
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
//    compile group: 'javax.persistence', name: 'persistence-api'

    antlr "org.antlr:antlr:3.5.2" // use ANTLR version 3
    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
    compile group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.3.0'
    compile group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.0'
    compile group: 'javax.activation', name: 'activation', version: '1.1.1'
//    compile 'mysql:mysql-connector-java:5.1.34'
    // should be compatible with mysql 5.5 and up.
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.12'
    jooqRuntime group: 'mysql', name: 'mysql-connector-java', version: '8.0.12'
    compile group: 'org.jooq', name: 'jooq', version: '3.11.9'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-jooq', version: '2.0.0.RELEASE'
//    compile('org.jooq:jooq-codegen:3.9.2')
//    compile 'org.jooq:jooq:3.8.9'
    compile "org.hibernate:hibernate-core:5.0.1.Final"
    compile "org.hibernate:hibernate-entitymanager:5.0.1.Final"
//    compile group: 'javax.persistence', name: 'persistence-api'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j-impl
    //compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.10.0'
    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.10.0'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.0.0.RELEASE'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-actuator
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.0.0.RELEASE'
    // https://mvnrepository.com/artifact/junit/junit
    testCompile group: 'junit', name: 'junit', version: '4.4'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.0.0.RELEASE'
}

//checkstyle {
//    ignoreFailures = false
//    toolVersion = '7.6.1'
//    configFile = new File('config/checkstyle/checkstyle.xml')
//}
jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}
test {
    testLogging.showStandardStreams = true
    //we want display the following test events
    testLogging {
        events "PASSED", "STARTED", "FAILED", "SKIPPED"
    }
}
jacoco {
    toolVersion = "0.8.2"
}

jooq {
    chat(sourceSets.main) {
        jdbc {
            driver = 'com.mysql.jdbc.Driver'
            url = 'jdbc:mysql://localhost:3306/atom'
            user = 'atom'
            password = 'atom'
        }
        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            strategy {
                name = 'org.jooq.codegen.DefaultGeneratorStrategy'
            }
            database {
                name = 'org.jooq.meta.mysql.MySQLDatabase'
                inputSchema = 'atom'
                excludes = 'flyway_schema_history' // don't need to map flyway table

//                forcedTypes {
//                    forcedType {
//                        name = 'BOOLEAN'
//                        types = 'tinyint'
//                    }
//                }
            }
            generate {
                relations = true
                deprecated = false
                records = true
                immutablePojos = true
                fluentSetters = true
            }
            target {
                packageName = 'db.gen'
                directory = 'src/main/generated/java'
            }
        }
    }
}

flyway {
    url = 'jdbc:mysql://localhost:3306/atom'
    user = 'atom'
    password = 'atom'
//    schemas = ['atom']
//    baselineOnMigrate = true
    locations = ["filesystem:$project.projectDir/src/main/resources/db/migration"]
}

generateChatJooqSchemaSource.dependsOn flywayMigrate
test.dependsOn flywayClean